SHELL:=/bin/bash

# Resolve some paths we need to know about
BIN_DIR:=$(abspath bin)
CMD_DIR:=$(abspath cmd)

# prefix the PATH with our bin/ dir since there are deps that need to use it
PATH:=$(BIN_DIR):$(PATH)

# Find the path to THIS makefile
MAKEFILE:=$(CURDIR)/$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST))
DOCKERFILE:=$(CURDIR)/Dockerfile

# A list of things that can be built (Any *.go files in cmd/<thing>)
CMDS:=$(shell find $(CMD_DIR) -type f -name '*.go' -exec dirname {} \; | xargs -n1 basename)
# We store built binaries in bin/<thing>, here we create a list of the paths expected for each $CMD
BINARIES_OUT:=$(patsubst %,bin/%.bin,$(CMDS))

# A list of the protos that need to be tracked (Anything under api/<version> with a .proto extension)
PROTOS:=$(shell find api -type f -name '*.proto')
# A list of files that will get generated by protoc (Should be generated in pkg/<path_to_proto>/*.pb.go)
PROTOS_OUT:=$(patsubst %.proto,%.pb.go,$(PROTOS))

PROTO_DESCRIPTORS:=$(shell find api -type f -name '*.proto-descriptor' -exec dirname {} \; | xargs -n1 basename)
ENVOY_FILTERS:=$(patsubst %,deploy/k8s/filters/%.yaml,$(PROTO_DESCRIPTORS))

# Build flags 
CGO_ENABLED?=0
GO111MODULE?=on
# Alias to the go command with our flags enforced
GOCMD=CGO_ENABLED=$(CGO_ENABLED) GO111MODULE=$(GO111MODULE) go

BRANCH?=$(shell git symbolic-ref --short HEAD)
COMMIT?=$(shell git rev-parse --short HEAD 2>/dev/null || echo "dev")

ifneq ("$(CI_COMMIT_TAG)", "")
	VERSION?=$(CI_COMMIT_TAG)
else
	# if can't find a version then force it to 0.0.0 - gitversion will auto
	# bump when we release
	VERSION?=$(shell git describe --tags 2>/dev/null || echo "0.0.0")
endif

PROJECT_NAMESPACE?=$(shell basename $(shell dirname $(PWD)))
APP_NAME?=$(shell basename $(PWD))
DOCKER_IMAGE?=$(PROJECT_NAMESPACE)/$(APP_NAME)

BINARY_NAME?=$(APP_NAME)

info:
	@echo "🤖 Info:"
	@echo "app_name  = $(APP_NAME)"
	@echo "version   = $(VERSION)"
	@echo "commit    = $(COMMIT)"
	@echo "branch    = $(BRANCH)"
	@echo ""

build-info:
	@echo "🤖 Build Info:"
	@echo "binary_name   = $(BINARY_NAME)"
	@echo "docker_image  = $(DOCKER_IMAGE)"
	@echo ""

deps:
	@echo "🤖 Setting up project for development"
	$(GOCMD) install github.com/uber/prototool/cmd/prototool
	$(GOCMD) install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
	$(GOCMD) install github.com/golang/protobuf/protoc-gen-go
	$(GOCMD) install github.com/tetratelabs/istio-tools/grpc-transcoder
	$(GOCMD) install github.com/bitnami/kubecfg

install:
	@echo "🤖 Vendoring dependencies"
	@$(GOCMD) mod vendor

test:
	@echo "🤖 Running unit-tests"
	@$(GOCMD) test -covermode=atomic -coverprofile=coverage.txt -v ./... | tee test.txt
	@$(GOCMD) tool cover -func=./coverage.txt

compile: protos
	@echo "🤖 Compiling: $(BINARY_NAME)"
	@$(GOCMD) build \
    	-o $(BINARY_NAME) \
    	-a -installsuffix cgo \
    	-ldflags "\
    		-X main.version=$(VERSION) \
    		-X main.datetime=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
    	"

image:
	@echo "🤖 Building docker image $(DOCKER_IMAGE)"
	@docker build . -f $(DOCKERFILE) -t $(DOCKER_IMAGE):latest --build-arg BINARY=$(BINARY_NAME)

clean: clean-protos clean-builds clean-deps

build: protos $(BINARIES_OUT)

protos: $(PROTOS_OUT)

gen-envoy-filters: protos $(ENVOY_FILTERS)

clean-protos: 
	@echo "🤖 Deleting protos"
	@rm -f $(PROTOS_OUT)

clean-builds:
	@echo "🤖 Deleting all builds"
	@rm -rf $(BINARIES_OUT)
	@rm -rf $(BIN_DIR)/*.bin

clean-deps:
	@echo "🤖 Deleting all installed dependencies"
	@rm -rf $(BIN_DIR)/*

list-protos:
	@echo $(PROTOS)

deploy/k8s/filters/%.yaml: api/*/%.proto-descriptor
	@echo "🤖 Generating ${@} from ${<}"
	@$(BIN_DIR)/grpc-transcoder --descriptor=${<} > ${@}

# regenerate the *.pb.go files whenever the source protos change
%.pb.go: %.proto
	@echo "🤖 Generating ${@} from ${<}"
	@$(BIN_DIR)/prototool generate ${<}
	@$(MAKE) gen-envoy-filters

# trigger a build whenever the source files that make up the binary change
# This actually creates a symlink from cmd/<package>/<package>.app to bin/<package>
# This is so that MAKE can track if the files have changed and only build the things that need building
bin/%.bin: cmd/%/*.go
	$(MAKE) -f $(MAKEFILE) -C $(CMD_DIR)/$* compile BINARY_NAME=$*.bin
	@ln -snf $(CMD_DIR)/$*/$*.bin $(abspath $@)